#random.seed=4783947
run.name=object recognition task
run.reset=true

###########
# evolution
###########
num.runs=10
num.generations=200
popul.size=50

performance.target=1.0
performance.target.type=higher
# If greater than 1 then use an average of the best performance over this many generations.
performance.target.average=5

#true means mutation probabilities are applied to all possible places a mutation could occur
#false means probabilities apply to individual as a whole; only one topological mutation can occur per individual
#note that this applies only to topological mutations, not weight mutations
topology.mutation.classic=true

#classic=[0.01, 0.5], not classic=[0.0001,] dependent on pop size. 0.03
add.neuron.mutation.rate=0.25
#classic=[0.01, 0.5], not classic=[0.0001,] dependent on pop size. 0.4
add.connection.mutation.rate=0.5
#[0.01, 0.3]
remove.connection.mutation.rate=0.02
#only remove weights with magnitude smaller than this
remove.connection.max.weight=50

#should be 1.0
prune.mutation.rate=1.0

#[0.1, 0.8]. 0.5, 0.6
weight.mutation.rate=0.1
#[1.0, 2.0] dependent on weight.max/min?
weight.mutation.std.dev=1.0


#percent of individuals used as parents
survival.rate=0.3
#proportion of sexual (crossover) versus asexual reproduction
crossover.proportion=0.8

#[1, 5]
selector.elitism.min.specie.size=5
#percent of individuals from each species copied to next generation unchanged
selector.elitism.proportion=0.05
#min number to select from a species (if it has size >=  selector.elitism.min.specie.size)
selector.elitism.min.to.select=1
selector.roulette=false
selector.max.stagnant.generations=99999
selector.speciated.fitness=true


############
# speciation
############
#species distance factors
#c1, excess genes factor [1.0, 2.0]
chrom.compat.excess.coeff=1.0
#c2, disjoint genes factor [1.0, 2.0]
chrom.compat.disjoint.coeff=2.0
#c3, Weight difference factor [0.2, 3.0]
chrom.compat.common.coeff=1.0

#compatability threshold [0.1, 4.0], relative to c#
speciation.threshold=4.0
speciation.target=3


##################
# fitness function
##################
fitness_function.class=com.ojcoleman.ahni.experiments.QLambdaFitness14VectorSchool
fitness.target=0.99
#max threads to use for fitness evaluation (including transcription of genotype/cppn to phenotype/substrate)
#if value is <= 0 then the detected number of processor cores will be used
fitness.max_threads=1
#if scale.factor > 1 then the substrate height, width and connection.range 
#will be multiplied by scale.factor every time scale.fitness is reached, at 
#most scale.times times. If the 
fitness.hyperneat.scale.factor=0
fitness.hyperneat.scale.times=0
fitness.hyperneat.scale.performance=0.95
fitness.hyperneat.scale.recordintermediateperformance=true

#experiment specific
hanns.populationinfologfilepath=log_population/qlearning/q_learning_population_school_corrected.txt
hanns.activatorlogfilepath=log_population/qlearning/q_learning_activator_school_corrected.txt
hanns.simulatorstepscount=7000


################
# CPPN/AnjiNet #
################
#input and output size determined by hyperneat settings
#stimulus.size=7
#response.size=1
initial.topology.activation=random
initial.topology.fully.connected=true
initial.topology.num.hidden.neurons=0
initial.topology.activation.input=linear
initial.topology.activation.output=linear
initial.topology.activation.random.allowed=linear, clamped-linear, absolute, step, sign, inverse-abs, divide, sigmoid, gaussian, sine
recurrent=disallowed
recurrent.cycles=1
#[1, 500]
weight.max=3
weight.min=-3


#####################
# HyperNEAT/GridNet #
#####################
ann.transcriber.class=com.ojcoleman.ahni.transcriber.HyperNEATTranscriberGridNet
ann.hyperneat.activation.function=sigmoid
ann.hyperneat.feedforward=true
#ann.hyperneat.cyclesperstep=4  not required for feed forward
ann.hyperneat.enablebias=true
ann.hyperneat.includedelta=true
ann.hyperneat.includeangle=true
ann.hyperneat.useinputlayerencoding=false

ann.hyperneat.connection.expression.threshold=0.2
ann.hyperneat.connection.range=-1
ann.transcriber.connection.weight.min=0
ann.transcriber.connection.weight.max=1

ann.hyperneat.depth=2
ann.hyperneat.height=4,4
ann.hyperneat.width=4,4


#############
# persistence
#############
persistence.class=com.anji.persistence.FilePersistence
persistence.base.dir=../or3/db
persist.enable=false
persist.all=false
persist.champions=false
persist.last=false
persist.load.genotype=false
id.file=../or3/db/id.xml
neat.id.file=../or3/db/neatid.xml

##############
# presentation
##############
presentation.generate=false
presentation.dir=./nevt

#########
# logging
#########
log.pergenerations=1
logging.enable=false
log4j.rootLogger=INFO, C
log4j.appender.C=org.apache.log4j.ConsoleAppender
#log4j.appender.F=org.apache.log4j.FileAppender
#log4j.appender.F=org.apache.log4j.RollingFileAppender
#log4j.appender.F.File=/home/data/ai/unsw/project/software/anji/log/or3.log
#log4j.appender.F.MaxFileSize=10MB
#log4j.appender.F.MaxBackupIndex=20
log4j.appender.C.layout=org.apache.log4j.PatternLayout
#log4j.appender.F.layout=org.apache.log4j.PatternLayout
log4j.appender.C.layout.ConversionPattern=%-5p %m%x%n
#log4j.appender.F.layout.ConversionPattern=%-5p %m%x%n
